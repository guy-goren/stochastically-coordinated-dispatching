#include "defs.h"

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

class Server
{

protected:

	int m_serverID;
	queue<job_t> m_queue;

public:

	Server(int id);
	virtual ~Server();

	int getQueueSize();

	void insertJobs(int jobs, int currentTime);
	vector<int> serveJobsAndReturnCreationTimes(int jobs);

};

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

class ServerBasic : public Server
{

protected:

	int m_NumberOfServers;
	SizeTimestampPair* m_localState;

public:

	ServerBasic(int id, int n);
	virtual ~ServerBasic();

	void getInformation(SizeTimestampPair * sizeTimestampPairs, int currentTime);

};

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

class ServerAdvanced : public ServerBasic
{

public:

	ServerAdvanced(int id, int n);
	~ServerAdvanced();

	void setInformation(const SizeTimestampPair * sizeTimestampPairs, int currentTime);

};

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

class ServerJIQ : public Server
{
private:

	bool m_idled;

public:

	ServerJIQ(int id);
	~ServerJIQ();

	vector<int> serveJobsAndReturnCreationTimesJIQ(int jobs);

	bool gotIdle();

};

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
